# 需求管理模块 API 文档

## 基础信息
- 基础路径: /demand
- 请求格式: application/json
- 响应格式: application/json

## 通用响应格式
```json
{
    "code": 200,       // 状态码
    "msg": "success",  // 消息
    "data": {}         // 数据
}
```

## 1. 提交需求
### 接口信息
- 路径: /demand/submit
- 方法: POST
- 描述: 提交新的人才需求

### 请求参数
```json
{
    "taskRequirements": "招聘Java高级工程师",    // 需求内容（必填）
    "taskPriority": "high",                    // 优先级（必填，可选值：high/medium/low）
    "expectedCompletionTime": "2024-12-31",    // 预期完成时间（必填，格式：yyyy-MM-dd）
    "receiverId": 2,                           // 接收人ID（必填）
    "taskStatus": "pending"                    // 状态（可选，默认：pending）
}
```

### 响应示例
```json
{
    "code": 200,
    "msg": "需求提交成功",
    "data": null
}
```

## 2. 获取我的需求列表
### 接口信息
- 路径: /demand/myDemands
- 方法: GET
- 描述: 获取当前用户发起的需求列表

### 请求参数
- status: String, 可选, 状态筛选(pending/in_progress/completed)
- startDate: Date, 可选, 开始日期(yyyy-MM-dd)
- endDate: Date, 可选, 结束日期(yyyy-MM-dd)
- page: Integer, 默认1, 页码
- pageSize: Integer, 默认10, 每页数量

### 响应示例
```json
{
    "code": 200,
    "msg": "success",
    "data": {
        "total": 100,
        "pages": 10,
        "list": [{
            "id": 1,
            "taskRequirements": "招聘Java工程师",
            "taskPriority": "high",
            "expectedCompletionTime": "2024-12-31",
            "taskStatus": "pending",
            "initiatorId": 1,
            "receiverId": 2,
            "createTime": "2024-06-25 10:00:00",
            "updateTime": "2024-06-25 10:00:00"
        }]
    }
}
```

## 3. 获取待办任务列表
### 接口信息
- 路径: /demand/todoTasks
- 方法: GET
- 描述: 获取当前用户需要处理的任务列表

### 请求参数
- priority: String, 可选, 优先级筛选(high/medium/low)
- type: String, 可选, 任务类型
- page: Integer, 默认1, 页码
- pageSize: Integer, 默认10, 每页数量

### 响应格式
同"获取我的需求列表"

## 4. 获取已完成任务列表
### 接口信息
- 路径: /demand/completedTasks
- 方法: GET
- 描述: 获取已完成的任务列表

### 请求参数
- startDate: Date, 可选, 开始日期(yyyy-MM-dd)
- endDate: Date, 可选, 结束日期(yyyy-MM-dd)
- department: String, 可选, 部门名称
- page: Integer, 默认1, 页码
- pageSize: Integer, 默认10, 每页数量

### 响应格式
同"获取我的需求列表"

## 5. 获取需求详情
### 接口信息
- 路径: /demand/detail/{id}
- 方法: GET
- 描述: 获取单个需求的详细信息

### 请求参数
- id: Long, 路径参数, 需求ID

### 响应示例
```json
{
    "code": 200,
    "msg": "success",
    "data": {
        "id": 1,
        "taskRequirements": "招聘Java工程师",
        "taskPriority": "high",
        "expectedCompletionTime": "2024-12-31",
        "taskStatus": "pending",
        "initiatorId": 1,
        "receiverId": 2,
        "createTime": "2024-06-25 10:00:00",
        "updateTime": "2024-06-25 10:00:00"
    }
}
```

## 6. 处理需求
### 接口信息
- 路径: /demand/process/{id}
- 方法: POST
- 描述: 处理指定的需求

### 请求参数
- id: Long, 路径参数, 需求ID

### 响应示例
```json
{
    "code": 200,
    "msg": "需求处理成功",
    "data": null
}
```

## 错误码说明
- 200: 成功
- 400: 请求参数错误
- 401: 未授权
- 403: 权限不足
- 404: 资源不存在
- 500: 服务器内部错误

## 注意事项
1. 所有请求需要携带认证信息（Token）
2. 日期格式统一使用 yyyy-MM-dd
3. 时间戳格式统一使用 yyyy-MM-dd HH:mm:ss
4. 分页参数 page 从1开始计数
5. initiator_id 和 receiver_id 必须是存在的用户ID
6. 任务状态和优先级必须使用预定义的枚举值

## 测试示例
### 1. 提交需求（使用curl）
```bash
curl -X POST http://localhost:8080/demand/submit \
  -H "Content-Type: application/json" \
  -d '{
    "taskRequirements": "招聘Java高级工程师",
    "taskPriority": "high",
    "expectedCompletionTime": "2024-12-31",
    "receiverId": 2,
    "taskStatus": "pending"
  }'
```

### 2. 获取需求列表（使用curl）
```bash
curl -X GET "http://localhost:8080/demand/myDemands?status=pending&page=1&pageSize=10"
```
